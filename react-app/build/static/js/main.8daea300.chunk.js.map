{"version":3,"sources":["dashboard.js","posts.js","categories/index.js","menu.js","Login.js","authProvider.js","http-interceptor.js","table.js","users/create-user.js","users/update-user.js","categories/create-category.js","customRoute.js","userListing.js","App.js","serviceWorker.js","index.js"],"names":["imgUrl","s3Url","withStyles","card","maxWidth","media","height","props","classes","react_default","a","createElement","Card_default","className","Title","title","CardMedia_default","image","CardContent_default","Typography_default","gutterBottom","component","CardActions_default","Button_default","size","color","PostList","List","Datagrid","TextField","source","DateField","EditButton","basePath","CategoryIcon","Icon","PostActions","_ref","bulkActions","displayedFilters","currentSort","filters","exporter","filterValues","onUnselectItems","resource","selectedIds","showFilter","layout_CardActions","React","cloneElement","context","CreateButton","PostFilter","Filter","TextInput","label","alwaysOn","CategoryList","name","padding","_ref2","Object","objectWithoutProperties","assign","categories_PostFilter","actions","categories_PostActions","bulkActionButtons","sort","field","order","DeleteButton","CategoryTitle","translate","_ref3","record","CategoryEdit","console","log","Edit","SimpleForm","CategoriesCreate","Create","redirect","FormDataConsumer","_ref4","formData","rest","ImageInput","accept","options","onDrop","files","b","c","data","FormData","append","axios","post","headers","content-type","then","resp","src","ImageField","_ref5","description","withRouter","connect","state","resources","getResources","onMenuClick","logout","MenuItemLink","to","primaryText","leftIcon","Home_default","onClick","Group_default","PowerSettingsNew_default","renderInput","_ref$meta","meta","touched","error","inputProps","esm_extends","input","TextField_default","helperText","fullWidth","Login","isError","login","auth","_this","userLogin","location","nextPathname","_this$props","this","handleSubmit","isLoading","main","avatar","Avatar_default","icon","Lock_default","onSubmit","hint","form","Field","disabled","type","variant","button","CircularProgress_default","thickness","Notification","Component","enhance","compose","reduxForm","validate","values","errors","username","password","admin","loading","theme","display","flexDirection","minHeight","alignItems","justifyContent","background","backgroundRepeat","backgroundSize","minWidth","marginTop","margin","backgroundColor","palette","secondary","grey","errorClass","defineProperty","require","authProvider","params","AUTH_LOGIN","localStorage","setItem","email","response","success","token","zf_name","Promise","resolve","reject","catch","AUTH_LOGOUT","removeItem","AUTH_ERROR","AUTH_CHECK","getItem","interceptors","request","use","config","Authorization","rows","id","numeric","disablePadding","EnhancedTableHead","createSortHandler","property","event","onRequestSort","_this2","onSelectAllClick","orderBy","numSelected","rowCount","TableHead_default","TableRow_default","map","row","TableCell_default","key","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","EnhancedTableToolbar","Toolbar_default","classNames","root","highlight","spacer","IconButton_default","aria-label","Delete_default","FilterList_default","paddingRight","spacing","unit","lighten","light","text","primary","dark","flex","EnhancedTable","selected","page","rowsPerPage","totalCount","search","showLoading","redirectToEditUser","redirectToCreateUser","componentDidMount","_this3","getData","setState","reqUrl","concat","undefined","get","metadata","handleRequestSort","handleSelectAllClick","target","checked","n","handleClick","selectedIndex","indexOf","newSelected","slice","length","handleChangePage","setTimeout","handleChangeRowsPerPage","value","handleChange","isSelected","editUser","e","userId","zf_id","_this4","_this$state","IsLoading","Math","min","linearProgress","LinearProgress","Authenticated","authParams","role","Paper_default","tableWrapper","tableToolBar","placeholder","onChange","textField","createButton","Table_default","table","aria-labelledby","table_EnhancedTableHead","TableBody_default","hover","aria-checked","tabIndex","scope","zf_email","TablePagination_default","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","react_router_es","link","width","position","overflowX","TextFields","has_admin_permission","formValues","isEmailError","submitForm","reqObj","has_customer_permission","has_delivery_permission","has_menu_permission","has_marketing_permission","has_production_permission","has_accounting_permission","test","index_es","container","submitButton","flexWrap","flexFlow","marginLeft","marginRight","selectDropdown","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getOneUserById","match","zf_has_admin_permission","uploadUrl","preventDefault","fields","customRoute","react_router_dom_es","exact","path","Dashboard","CreateUser","UpdateUser","CreateCategory","dataProvider","simpleRestProvider","url","arguments","Headers","Accept","fetchUtils","fetchJson","App","Admin","customRoutes","dashboard","menu","Menu","loginPage","Resource","list","edit","create","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8daea300.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card'; \r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Title } from 'react-admin'; \r\n\r\nlet uploadurl = 'https://www.favoriterun.com/api/upload';\r\nlet s3Url = 'https://favoriterun.s3.amazonaws.com/images/';\r\nlet imgUrl = s3Url + '4d089500-e41e-11e8-ac70-7d9bca0ad2e5.jpeg';\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n};\r\n\r\nfunction MediaCard(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n        <Title title=\"Welcome to the administration\" />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={imgUrl}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom   component=\"h2\">\r\n            Card example with image\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n          Card example with image. Card example with image. Card example with image.\r\n          </Typography>\r\n        </CardContent> \r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Action\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);\r\n\r\n\r\n// import React from 'react';\r\n// import {Card, CardMedia, CardContent } from '@material-ui/core/Card'; \r\n// import { Title } from 'react-admin'; \r\n\r\n// let uploadurl = 'https://www.favoriterun.com/api/upload';\r\n// let s3Url = 'https://favoriterun.s3.amazonaws.com/images/';\r\n// let imgUrl = s3Url + '009ec5f0-e41d-11e8-ac70-7d9bca0ad2e5.png';\r\n// export default () => (\r\n//     <Card>\r\n//         <Title title=\"Welcome to the administration\" />\r\n        \r\n//         <CardMedia \r\n//                 image={imgUrl}\r\n//                 title=\"Contemplative Reptile\"\r\n//                 />\r\n//         <CardContent>Welcome to admin</CardContent>\r\n//     </Card>\r\n// );","// in posts.js\r\nimport React from 'react';\r\nimport { List, Datagrid, Edit, Create, SimpleForm, DateField, TextField, EditButton, DisabledInput, TextInput, LongTextInput, DateInput } from 'react-admin';\r\n \r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const PostList = (props) => (\r\n    <List {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"title\" />\r\n            <DateField source=\"published_at\" />\r\n            <TextField source=\"average_note\" />\r\n            <TextField source=\"views\" />\r\n            <EditButton basePath=\"/categories\" />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\nconst Aside = () => (\r\n    <div style={{ width: 200, margin: '1em' }}>\r\n        <Typography variant=\"title\">Post details</Typography>\r\n        <Typography variant=\"body1\">\r\n            Posts will only be published one an editor approves them\r\n        </Typography>\r\n    </div>\r\n)\r\nexport const PostEdit = (props) => (\r\n    <Edit aside={<Aside />} title={<PostTitle />} {...props}>\r\n        <SimpleForm>\r\n            <DisabledInput source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\r\n            <LongTextInput source=\"body\" />\r\n            <DateInput label=\"Publication date\" source=\"published_at\" />\r\n            <TextInput source=\"average_note\" />\r\n            <DisabledInput label=\"Nb views\" source=\"views\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const PostCreate = (props) => (\r\n    <Create title=\"Create a Post\" {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\r\n            <LongTextInput source=\"body\" />\r\n            <TextInput label=\"Publication date\" source=\"published_at\" />\r\n            <TextInput source=\"average_note\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport {\r\n    translate,\r\n    Datagrid,\r\n    Edit,\r\n    EditButton,\r\n    List,\r\n    Create,\r\n    NumberField,\r\n    ReferenceManyField,\r\n    SimpleForm,\r\n    TextField,\r\n    TextInput,\r\n    ImageField,\r\n    DateInput,\r\n    ImageInput,\r\n    DateField,\r\n    DisabledInput,\r\n    LongTextInput,\r\n    Filter,\r\n    FileInput,\r\n    FileField,\r\n    SelectInput,\r\n    BooleanInput,\r\n    FormDataConsumer,\r\n    DateTimeInput,\r\n} from 'react-admin'; \r\nimport Dropzone from 'react-dropzone'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Icon from '@material-ui/icons/Bookmark';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CardActions, CreateButton, ExportButton, RefreshButton, DeleteButton } from 'react-admin';\r\n\r\nexport const CategoryIcon = Icon;\r\n\r\nconst listStyles = {\r\n    name: { padding: '0 12px 0 25px' },\r\n};\r\n\r\n\r\nconst PostActions = ({\r\n    bulkActions,\r\n    basePath,\r\n    currentSort,\r\n    displayedFilters,\r\n    exporter,\r\n    filters,\r\n    filterValues,\r\n    onUnselectItems,\r\n    resource,\r\n    selectedIds,\r\n    showFilter\r\n}) => (\r\n    <CardActions>\r\n        {bulkActions && React.cloneElement(bulkActions, {\r\n            basePath,\r\n            filterValues,\r\n            resource,\r\n            selectedIds,\r\n            onUnselectItems,\r\n        })}\r\n        {filters && React.cloneElement(filters, {\r\n            resource,\r\n            showFilter,\r\n            displayedFilters,\r\n            filterValues,\r\n            context: 'button',\r\n        }) }\r\n        <CreateButton basePath='/categories' /> \r\n        {/* <CreateButton basePath='/category' />  */}\r\n    </CardActions>\r\n);\r\nconst PostFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />  \r\n    </Filter>\r\n);\r\nexport const CategoryList = withStyles(listStyles)(({ classes, ...props }) => (\r\n    <List {...props}  filters={<PostFilter />}  actions={<PostActions/>}  bulkActionButtons ={null} sort={{ field: 'name', order: 'ASC' }}>\r\n        <Datagrid>\r\n            <TextField source=\"name\" className={classes.name} /> \r\n            <EditButton />\r\n            <DeleteButton/>\r\n        </Datagrid>\r\n    </List>\r\n));\r\n\r\nconst CategoryTitle = translate(({ record, translate }) => (\r\n    <span>Category\r\n    </span>\r\n));\r\nconst handleSubmit = function(d) { \r\n    console.log('handleSubmit', d);  \r\n    console.log('handleSubmit', this); \r\n    return d;\r\n}\r\n\r\n\r\n// const Aside = () => (\r\n//     <div style={{ width: 200, margin: '1em' }}>\r\n//         <Typography variant=\"title\">Post details</Typography>\r\n//         <Typography variant=\"body1\">\r\n//             Posts will only be published one an editor approves them\r\n//         </Typography>\r\n//     </div>\r\n// )\r\n// aside={<Aside />}\r\nexport const CategoryEdit = props => {\r\n    console.log(props)\r\n    return (\r\n    <Edit  title={<CategoryTitle />}  {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />  \r\n        </SimpleForm>\r\n    </Edit>\r\n)};\r\nconst fileDroped = (props) => {\r\n    console.log('props')\r\n}\r\nexport const CategoriesCreate = (props) => {\r\n    console.log('categ', props)\r\n    let uploadurl = 'http://52.52.236.205:4000/api/upload/s3/category';\r\n    // let uploadurl = 'https://www.favoriterun.com/api/upload';\r\n    // let s3Url = 'https://favoriterun.s3.amazonaws.com/images/'; \r\n\r\n    let categoriesThumbnailsPath =  \"https://s3-us-west-1.amazonaws.com/zenfoods/categories/thumbnail/\";\r\n    let categoriesImagePath = \"https://s3-us-west-1.amazonaws.com/zenfoods/categories/thumbnail/\";\r\n\r\n    return (\r\n    <Create title={<CategoryTitle />} redirect=\"view\" {...props}>\r\n        <SimpleForm  >\r\n            <TextInput source=\"name\" /> \r\n            <TextInput source=\"description\" />  \r\n            \r\n            <FormDataConsumer> \r\n                {({ formData, ...rest }) => {\r\n                    console.log('rest', rest)\r\n                    return <ImageInput  \r\n                        source=\"pictures\" label=\"Related pictures\" accept=\"image/*\" \r\n                        options ={\r\n                            {\r\n                                onDrop: (files,b, c)=>{ \r\n                                    console.log(files)\r\n                                    let data = new FormData();\r\n                                    data.append('image', files[0], files[0].name); \r\n                                    const config = {\r\n                                        headers: { 'content-type': 'multipart/form-data' }\r\n                                    }\r\n                                    axios.post(uploadurl, data, config).then(resp=>{\r\n                                        formData.src = categoriesThumbnailsPath + resp.data.data;\r\n                                        // console.log(formData) \r\n                                        // this.setState({src: formData.src }) ;\r\n                                        \r\n                                    })  \r\n                                    return axios\r\n                                }\r\n                            }\r\n                        } > \r\n                        <ImageField source=\"src\" src=\"url\" title=\"title\" />\r\n                    </ImageInput>  \r\n                }}\r\n            </FormDataConsumer> \r\n            {/* <SelectInput source=\"category\" choices={[\r\n                { id: 'programming', name: 'Programming' },\r\n                { id: 'lifestyle', name: 'Lifestyle' },\r\n                { id: 'photography', name: 'Photography' },\r\n            ]} /> */}\r\n            {/* <BooleanInput source=\"hasEmail\" /> */}\r\n            <FormDataConsumer> \r\n                {({ formData, ...rest }) => { \r\n                    console.log('FormDataConsumer:', formData)\r\n                    return formData.description ==='showEmail' &&\r\n                <TextInput source=\"email\" {...rest} /> }}\r\n            </FormDataConsumer>\r\n            {/* <DateTimeInput validate={(v)=>console.log(v)} source=\"published_at\" /> */}\r\n        </SimpleForm>\r\n    </Create>\r\n)};\r\n","import React, { createElement } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MenuItemLink, getResources } from 'react-admin';\r\nimport { withRouter } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { CategoryIcon } from './categories';\r\n \r\nimport ExitIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nconst Menu = ({ resources, onMenuClick, logout }) => (\r\n    <div> \r\n        <MenuItemLink\r\n            to=\"/dashboard\"\r\n            primaryText=\"Home\"\r\n            leftIcon={<HomeIcon />}\r\n            onClick={onMenuClick} />\r\n            <MenuItemLink\r\n                to=\"/users\"\r\n                primaryText=\"Users (Custom table)\"\r\n                leftIcon={<GroupIcon />}\r\n                onClick={onMenuClick} />\r\n                \r\n            <MenuItemLink\r\n                to=\"/categories\"\r\n                primaryText=\"Categories (Data table)\"\r\n                leftIcon={<CategoryIcon />}\r\n                onClick={onMenuClick} />\r\n            <MenuItemLink\r\n                to=\"/login\"\r\n                primaryText=\"Logout\"\r\n                leftIcon={<ExitIcon />}\r\n                onClick={()=> { console.log('logut')}} />\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    resources: getResources(state),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(Menu));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { propTypes, reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\n\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport { Notification, translate, userLogin } from 'react-admin';\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        // background: 'url(https://source.unsplash.com/random/1600x900)',\r\n        background: '#3f51b5',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n    },\r\n    card: {\r\n        minWidth: 400,\r\n        marginTop: '6em',\r\n        minHeight: 400\r\n    },\r\n    avatar: {\r\n        margin: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    icon: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    hint: {\r\n        marginTop: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        color: theme.palette.grey[500],\r\n    },\r\n    errorClass: {\r\n        marginTop: '1em',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        color: theme.palette.grey[500],\r\n        color: 'red',\r\n    },\r\n    form: {\r\n        padding: '0 1em 1em 1em',\r\n    },\r\n    input: {\r\n        marginTop: '1em',\r\n    },\r\n    actions: {\r\n        padding: '0 1em 1em 1em',\r\n    },\r\n});\r\n\r\n// see http://redux-form.com/6.4.3/examples/material-ui/\r\nconst renderInput = ({\r\n    meta: { touched, error } = {},\r\n    input: { ...inputProps },\r\n    ...props\r\n}) => (\r\n    <TextField\r\n        error={!!(touched && error)}\r\n        helperText={touched && error}\r\n        {...inputProps}\r\n        {...props}\r\n        fullWidth\r\n    />\r\n);\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        isError: false\r\n    }\r\n    login = auth => {\r\n        console.log('asdf', auth);\r\n        console.log('asdf', this.props); \r\n        return this.props.userLogin(\r\n            auth,\r\n            this.props.location.state\r\n                ? this.props.location.state.nextPathname\r\n                : '/'\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes, handleSubmit, isLoading, translate } = this.props; \r\nconst email = value =>\r\nvalue && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n'Invalid email address' : undefined\r\n        return (\r\n            <div className={classes.main}>\r\n                <Card className={classes.card}>\r\n                    <div className={classes.avatar}>\r\n                        <Avatar className={classes.icon}>\r\n                            <LockIcon />\r\n                        </Avatar>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit(this.login)} redirect='/#/dashboard'>\r\n                        <div className={classes.hint}>Hint: demo@demo.com / asdf1234</div> \r\n                        <div className={classes.form}>\r\n                            <div className={classes.input}>\r\n                                <Field\r\n                                    name=\"username\"\r\n                                    component={renderInput} \r\n                                    label='Email'\r\n                                    disabled={isLoading}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.input}>\r\n                                <Field\r\n                                    name=\"password\"\r\n                                    component={renderInput}\r\n                                    label='Password'\r\n                                    type=\"password\"\r\n                                    disabled={isLoading}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <CardActions className={classes.actions}>\r\n                            <Button\r\n                                variant=\"raised\"\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                disabled={isLoading}\r\n                                className={classes.button}\r\n                                fullWidth\r\n                            >\r\n                                {isLoading && (\r\n                                    <CircularProgress size={25} thickness={2} />\r\n                                )}\r\n                                {translate('ra.auth.sign_in')}\r\n                            </Button>\r\n                        </CardActions>\r\n                    </form>\r\n                </Card>\r\n                <Notification />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    ...propTypes,\r\n    authProvider: PropTypes.func,\r\n    classes: PropTypes.object,\r\n    previousRoute: PropTypes.string,\r\n    translate: PropTypes.func.isRequired,\r\n    userLogin: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({ isLoading: state.admin.loading > 0 });\r\n\r\nconst enhance = compose(\r\n    translate,\r\n    reduxForm({\r\n        form: 'signIn',\r\n        validate: (values, props) => { \r\n            const errors = {};\r\n            const { translate } = props;\r\n            if (!values.username) {\r\n                errors.username = translate('ra.validation.required');\r\n            }\r\n            if (!values.password) {\r\n                errors.password = translate('ra.validation.required');\r\n            }\r\n            return errors;\r\n        },\r\n    }),\r\n    connect(\r\n        mapStateToProps,\r\n        { userLogin }\r\n    ),\r\n    withStyles(styles)\r\n);\r\n\r\nexport default withRouter(enhance(Login));\r\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\r\n\r\nconst axios = require('axios');\r\n\r\nexport default (type, params) => {\r\n    if (type === AUTH_LOGIN) {\r\n        const { username, password } = params;\r\n        localStorage.setItem('username', username); \r\n        // http://52.52.236.205:4000/documentation#/\r\n        return axios.post(`http://52.52.236.205:4000/api/users/login`, {\r\n            \"email\": username,\r\n            \"password\": password\r\n        })\r\n        .then( (response) => { \r\n            console.log('response', response);\r\n            if (response.data.success)  {\r\n                localStorage.setItem('token', response.data.data.token);\r\n                localStorage.setItem('zf_name', response.data.data.zf_name);\r\n                return Promise.resolve()\r\n            }else {\r\n                return Promise.reject();\r\n            }\r\n        })\r\n        .catch( (error) => { \r\n            console.log('error', error);\r\n            return Promise.reject();\r\n        })\r\n        .then(function () {\r\n            console.log('response1212'); \r\n        });\r\n        \r\n    }\r\n    if (type === AUTH_LOGOUT) {\r\n        localStorage.removeItem('username');\r\n        return Promise.resolve();\r\n    }\r\n    if (type === AUTH_ERROR) {\r\n        return Promise.resolve();\r\n    }\r\n    if (type === AUTH_CHECK) {\r\n        console.log(params)\r\n        // return params.role == 'admin'\r\n        // ? Promise.resolve()\r\n        // : Promise.reject();\r\n        return localStorage.getItem('token')\r\n            ? Promise.resolve()\r\n            : Promise.reject();\r\n    }\r\n    return Promise.reject('Unkown method');\r\n};\r\n","\r\nconst axios = require('axios');\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        let token = localStorage.getItem('token'); \r\n        // console.log(token)\r\n        if (token) {\r\n            // config.headers.Authorization = `Bearer ${token}`;\r\n            config.headers.Authorization = token;\r\n        }  \r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n  );\r\n\r\nexport default axios;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Authenticated, LinearProgress  } from 'react-admin';\r\nimport { Route, Redirect } from 'react-router'\r\nimport axios from './http-interceptor';\r\n\r\nlet counter = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  counter += 1;\r\n  return { id: counter, name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  { id: 'zf_name', numeric: false, disablePadding: false, label: 'Name' }, \r\n  { id: 'zf_email', numeric: false, disablePadding: true, label: 'Email' },\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    console.log('my props', this.props)\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell> */}\r\n          {rows.map(row => {\r\n            return (\r\n              <TableCell\r\n                key={row.id}\r\n                numeric={row.numeric} \r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  // onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    // marginTop: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    position: 'relative'\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n    position: 'relative'\r\n  },\r\n  tableToolBar : {\r\n    justifyContent: 'space-between',\r\n    display: 'flex',\r\n  },\r\n  linearProgress: {\r\n    width: '100%', \r\n    position: 'absolute',\r\n    marginTop: 0\r\n  },\r\n  textField: {\r\n    margin: '20px;'\r\n  },\r\n  createButton: {\r\n    margin: '20px'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: 'calories',\r\n    sort: 'zf_id' , \r\n    selected: [],\r\n    data: [ \r\n    ],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    totalCount: 0,\r\n    search: '',\r\n    showLoading: false, \r\n    redirectToEditUser: false,\r\n    redirectToCreateUser: false,\r\n  };\r\n  componentDidMount = () => { \r\n    this.getData();\r\n  }\r\n  getData = () => {\r\n    this.setState({showLoading: true})\r\n        // Make a request for a user with a given ID\r\n    // axios.get('http://localhost:3333/categories')\r\n    // http://localhost:3000/api/users?page=1&limit=1\r\n    // axios.get(`http://localhost:3003/api/users?_p=${this.state.page + 1}&_size=${this.state.rowsPerPage}`)\r\n    let reqUrl = `http://52.52.236.205:4000/api/users?page=${this.state.page + 1}&limit=${this.state.rowsPerPage}&sort=${this.state.sort}&order=${this.state.order}`;\r\n    if (this.state.search !== undefined && this.state.search !== '') {\r\n      reqUrl += `&search=${this.state.search}`;\r\n    }\r\n    axios.get(reqUrl, {})\r\n\r\n      .then( (response) => {\r\n        // handle success \r\n        console.log(response); \r\n        this.setState({\r\n          showLoading: false,\r\n          data: response.data.data,\r\n          totalCount: response.data.metadata.totalCount\r\n        })\r\n      })\r\n      .catch( (error) => {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        // always executed\r\n      });\r\n  }\r\n  handleRequestSort = (event, property) => {\r\n    console.log(event, property)\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n    this.setState({ sort: property });\r\n    this.getData();\r\n\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    } \r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n    setTimeout(()=>{\r\n      console.log(this.state.page)\r\n      this.getData();\r\n    }, 0);\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    console.log(event)\r\n    this.setState({ rowsPerPage: event.target.value });\r\n    setTimeout(()=>{\r\n      console.log(this.state.page)\r\n      this.getData();\r\n    }, 0);\r\n  };\r\n  handleChange = name => event => { \r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n    setTimeout(()=>{ \r\n      this.getData();\r\n    }, 0);\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n  redirectToCreateUser = ()=> {\r\n    console.log('redir')\r\n    this.setState({redirectToCreateUser: true});\r\n  }\r\n  editUser = (n)=> (e) => {\r\n    console.log('editUser:', n, e)\r\n    this.setState({redirectToEditUser: true, userId: n.zf_id});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    console.log('my props', this.props)\r\n    const { data, order, orderBy, selected, rowsPerPage, page, totalCount } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n    let IsLoading = <div className={classes.linearProgress}></div>  \r\n    if (this.state.showLoading) {\r\n      IsLoading = <LinearProgress  className={classes.linearProgress}/>\r\n      console.log('show loading')\r\n    }\r\n    console.log('sdsdshow loading')\r\n \r\n    let a = (\r\n    <Authenticated authParams={{ role: 'admin' }}>\r\n      <Paper className={classes.root}>\r\n      {IsLoading}\r\n        <div className={classes.tableWrapper}> \r\n        \r\n          <div className={classes.tableToolBar}>\r\n\r\n            <TextField source=\"search\" \r\n            value={this.state.search}\r\n            placeholder=\"search\"\r\n            onChange={this.handleChange('search')}\r\n            className={classes.textField} />\r\n \r\n            <Button variant=\"outlined\" color=\"secondary\" className={classes.createButton} onClick={this.redirectToCreateUser}>\r\n              Create User\r\n            </Button>\r\n\r\n          </div>\r\n\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy} \r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {\r\n                // stableSort(data, getSorting(order, orderBy))\r\n                // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                data.map(n => {\r\n                  // console.log('is called with', n)\r\n                  const isSelected = this.isSelected(n.zf_id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.zf_id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.zf_id}\r\n                      selected={isSelected}\r\n                    >\r\n                      {/* <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell> */}\r\n                      <TableCell component=\"th\" scope=\"row\" onClick={this.editUser(n)}>\r\n                        {n.zf_name}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" >\r\n                        {n.zf_email}\r\n                      </TableCell>\r\n                      {/* <TableCell>{n.role==='admin' ? 'i am admin' : 'not admni'}</TableCell>  */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={totalCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />  \r\n\r\n      </Paper>\r\n      </Authenticated>\r\n    );\r\n    console.log('this.state.redirectToCreateUser', this.state.redirectToCreateUser)\r\n    if(this.state.redirectToCreateUser) {\r\n      a = <Redirect to=\"/create-user\"/>\r\n    }\r\n    if(this.state.redirectToEditUser) {\r\n      let link = '/update-user/' + this.state.userId;\r\n      a = <Redirect to={link}/>\r\n    }\r\n    return a;\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport axios from '../http-interceptor';\r\nimport {\r\n    Card, \r\n    TextField, \r\n    CardContent, \r\n    Button, Checkbox, Select, MenuItem, MenuList} from '@material-ui/core'; \r\nimport { Title } from 'react-admin'; \r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexFlow: 'column',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    selectDropdown: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    submitButton:{\r\n        width: 200,\r\n    }\r\n  });\r\n\r\n  let handleChange = (v) => {\r\n    console.log(v) \r\n}\r\nclass TextFields extends React.Component {\r\n    state = { \r\n        // age: 10,\r\n        has_admin_permission: true,\r\n    };\r\n    formValues = {\r\n        name:'',\r\n    };\r\n    isEmailError = false;\r\n\r\n    handleChange = name => event => {\r\n        if(name=='has_admin_permission') {\r\n            this.setState({\r\n            [name]: event.target.checked,\r\n            });\r\n        }else\r\n        this.setState({\r\n          [name]: event.target.value,\r\n        });\r\n        setTimeout(()=> console.log(this.state), 0)\r\n        if(name=='email') {\r\n            this.isEmailError = this.email(event.target.value);\r\n        }\r\n        \r\n        // this.formValues.name =  event.target.value\r\n    }; \r\n    submitForm = () => {\r\n        console.log('submit form:', this.state)\r\n        const reqObj = Object.assign({}, this.state)\r\n        reqObj.has_admin_permission = reqObj.has_admin_permission ? 1 : 0;\r\n        reqObj.has_customer_permission = 1;\r\n        reqObj.has_delivery_permission = 1;\r\n        reqObj.has_menu_permission = 1;\r\n        reqObj.has_marketing_permission = 1;\r\n        reqObj.has_production_permission = 1;\r\n        reqObj.has_accounting_permission = 1;\r\n        console.log('reqObj  :', reqObj)\r\n\r\n        return axios.post(`http://52.52.236.205:4000/api/users`, reqObj)\r\n        .then( (response) => { \r\n            console.log('response', response); \r\n        })\r\n        .catch( (error) => { \r\n            console.log('error', error); \r\n        })\r\n        .then(function () {\r\n            console.log('response1212'); \r\n        });\r\n    }\r\n    email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n    'Invalid email address' : false\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Card>\r\n                <Title title=\"Create user\" />  \r\n                <CardContent className={classes.container}>\r\n                 \r\n                    <TextField\r\n                        id=\"standard-name\"\r\n                        label=\"Name\"  \r\n                        error = {!this.state.name}\r\n                        onChange={this.handleChange('name')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/>  \r\n                    <TextField\r\n                        id=\"standard-name1\"\r\n                        label=\"Email\" \r\n                        type=\"email\"\r\n                        error = {this.isEmailError}\r\n                        onChange={this.handleChange('email')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/> \r\n                    <TextField\r\n                        id=\"standard-name2\"\r\n                        label=\"Password\"  \r\n                        type=\"password\"\r\n                        onChange={this.handleChange('password')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/> \r\n                    {/* <Select\r\n                        className={classes.selectDropdown}\r\n                        value={this.state.age}\r\n                        onChange={this.handleChange('age')}\r\n                        inputProps={{\r\n                        name: 'age',\r\n                        id: 'age-simple',\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select> */}\r\n                    <div className={classes.textField}>\r\n\r\n                        Admin Permission\r\n                        <Checkbox   \r\n                            id=\"has_admin_permission\"\r\n                            label=\"has_admin_permission\"  \r\n                            checked={this.state.has_admin_permission}\r\n                            onChange={this.handleChange('has_admin_permission')} \r\n\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"outlined\" \r\n                        className={classes.submitButton} onClick={this.submitForm}>\r\n                        Submit\r\n                    </Button>\r\n                </CardContent>             \r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(TextFields);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport axios from '../http-interceptor';\r\nimport {\r\n    Card, \r\n    TextField, \r\n    CardContent, \r\n    Button, Checkbox, Select, MenuItem, MenuList} from '@material-ui/core'; \r\nimport { Title } from 'react-admin'; \r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexFlow: 'column',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    selectDropdown: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    submitButton:{\r\n        width: 200,\r\n    }\r\n  });\r\n\r\n  let handleChange = (v) => {\r\n    console.log(v) \r\n}\r\nclass TextFields extends React.Component {\r\n    state = {  \r\n        id: 0,\r\n        has_admin_permission: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    }; \r\n    isEmailError = false;\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    handleChange = name => event => {\r\n        if(name=='has_admin_permission') {\r\n            this.setState({\r\n            [name]: event.target.checked,\r\n            });\r\n        }else\r\n        this.setState({\r\n          [name]: event.target.value,\r\n        });\r\n        setTimeout(()=> console.log(this.state), 0)\r\n        if(name=='email') {\r\n            this.isEmailError = this.email(event.target.value);\r\n        } \r\n    }; \r\n    submitForm = () => {\r\n        console.log('submit form:', this.state)\r\n        const reqObj = Object.assign({}, this.state)\r\n        reqObj.has_admin_permission = reqObj.has_admin_permission ? 1 : 0;\r\n        reqObj.has_customer_permission = 1;\r\n        reqObj.has_delivery_permission = 1;\r\n        reqObj.has_menu_permission = 1;\r\n        reqObj.has_marketing_permission = 1;\r\n        reqObj.has_production_permission = 1;\r\n        reqObj.has_accounting_permission = 1;\r\n        console.log('reqObj  :', reqObj)\r\n\r\n        return axios.post(`http://52.52.236.205:4000/api/users`, reqObj)\r\n        .then( (response) => { \r\n            console.log('response', response); \r\n        })\r\n        .catch( (error) => { \r\n            console.log('error', error); \r\n        })\r\n        .then(function () {\r\n            console.log('response1212'); \r\n        });\r\n    }\r\n    \r\n    componentDidMount = () => { \r\n        this.getOneUserById(this.props.match.params.id);\r\n    }\r\n    \r\n    getOneUserById = (id) => {\r\n        console.log('id', id);\r\n        return axios.get(`http://52.52.236.205:4000/api/users/${id}`)\r\n        .then( (response) => { \r\n            console.log('getOneUserById', response); \r\n            let resp = response.data.data;\r\n            this.setState({\r\n                id: resp.zf_id,\r\n                name: resp.zf_name,\r\n                email: resp.zf_email,\r\n                has_admin_permission: resp.zf_has_admin_permission\r\n            });\r\n            console.log('id', this.state);\r\n        })\r\n        .catch( (error) => { \r\n            console.log('getOneUserByIderror', error); \r\n        }) \r\n    }\r\n    email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n    'Invalid email address' : false\r\n    render() {\r\n        // console.log('updateuser', this.props)\r\n        const { classes, match } = this.props;\r\n        return (\r\n            <Card>\r\n                <Title title=\"Create user\" />  \r\n                <CardContent className={classes.container}>\r\n                 \r\n                    <TextField\r\n                        id=\"standard-name\" \r\n                        value= {this.state.name}\r\n                        error = {!this.state.name}\r\n                        onChange={this.handleChange('name')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/>  \r\n                    <TextField\r\n                        id=\"standard-name1\" \r\n                        type=\"email\"\r\n                        error = {this.isEmailError}\r\n                        onChange={this.handleChange('email')}\r\n                        className={classes.textField}\r\n                        value= {this.state.email}\r\n                        margin=\"normal\"/> \r\n                    <TextField\r\n                        id=\"standard-name2\" \r\n                        type=\"password\"\r\n                        value= {this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        className={classes.textField} \r\n                        margin=\"normal\"/> \r\n                    {/* <Select\r\n                        className={classes.selectDropdown}\r\n                        value={this.state.age}\r\n                        onChange={this.handleChange('age')}\r\n                        inputProps={{\r\n                        name: 'age',\r\n                        id: 'age-simple',\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select> */}\r\n                    <div className={classes.textField}>\r\n\r\n                        Admin Permission\r\n                        <Checkbox   \r\n                            id=\"has_admin_permission\"   \r\n                            checked={this.state.has_admin_permission}\r\n                            onChange={this.handleChange('has_admin_permission')} \r\n                        />\r\n                    </div>\r\n                    <Button variant=\"outlined\" \r\n                        className={classes.submitButton} onClick={this.submitForm}>\r\n                        Submit\r\n                    </Button>\r\n                </CardContent>             \r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(TextFields);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport axios from '../http-interceptor';\r\nimport {\r\n    Card, \r\n    TextField, \r\n    CardContent, \r\n    Button, Checkbox, Select, MenuItem, MenuList} from '@material-ui/core'; \r\nimport { Title } from 'react-admin'; \r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexFlow: 'column',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    selectDropdown: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      width: 200,\r\n    },\r\n    submitButton:{\r\n        width: 200,\r\n    }\r\n  });\r\n\r\n  let handleChange = (v) => {\r\n    console.log(v) \r\n}\r\nclass TextFields extends React.Component {\r\n    state = { \r\n        // age: 10,\r\n        has_admin_permission: true,\r\n    };\r\n    formValues = {\r\n        name:'',\r\n    };\r\n    isEmailError = false;\r\n    uploadUrl = 'http://52.52.236.205:4000/api/upload/s3/category';\r\n\r\n    handleChange = name => event => {\r\n        if(name=='has_admin_permission') {\r\n            this.setState({\r\n            [name]: event.target.checked,\r\n            });\r\n        }else\r\n        this.setState({\r\n          [name]: event.target.value,\r\n        });\r\n        setTimeout(()=> console.log(this.state), 0)\r\n        if(name=='email') {\r\n            this.isEmailError = this.email(event.target.value);\r\n        }\r\n        \r\n        // this.formValues.name =  event.target.value\r\n    }; \r\n    submitForm = () => {\r\n        console.log('submit form:', this.state)\r\n        const reqObj = Object.assign({}, this.state)\r\n        reqObj.has_admin_permission = reqObj.has_admin_permission ? 1 : 0;\r\n        reqObj.has_customer_permission = 1;\r\n        reqObj.has_delivery_permission = 1;\r\n        reqObj.has_menu_permission = 1;\r\n        reqObj.has_marketing_permission = 1;\r\n        reqObj.has_production_permission = 1;\r\n        reqObj.has_accounting_permission = 1;\r\n        console.log('reqObj  :', reqObj)\r\n\r\n        return axios.post(`http://52.52.236.205:4000/api/categories`, reqObj)\r\n        .then( (response) => { \r\n            console.log('response', response); \r\n        })\r\n        .catch( (error) => { \r\n            console.log('error', error); \r\n        })\r\n        .then(function () {\r\n            console.log('response1212'); \r\n        });\r\n    }\r\n    email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n    'Invalid email address' : false\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Card>\r\n                <Title title=\"Create Category\" />  \r\n                <CardContent className={classes.container}>\r\n                 \r\n                    <TextField\r\n                        id=\"standard-name\"\r\n                        label=\"Name\"  \r\n                        error = {!this.state.name}\r\n                        onChange={this.handleChange('name')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/>  \r\n                    <TextField\r\n                        id=\"standard-name1\"\r\n                        label=\"Email\" \r\n                        type=\"email\"\r\n                        error = {this.isEmailError}\r\n                        onChange={this.handleChange('email')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/> \r\n                    <TextField\r\n                        id=\"standard-name2\"\r\n                        label=\"Password\"  \r\n                        type=\"password\"\r\n                        onChange={this.handleChange('password')}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"/> \r\n                    {/* <Select\r\n                        className={classes.selectDropdown}\r\n                        value={this.state.age}\r\n                        onChange={this.handleChange('age')}\r\n                        inputProps={{\r\n                        name: 'age',\r\n                        id: 'age-simple',\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={10}>Ten</MenuItem>\r\n                        <MenuItem value={20}>Twenty</MenuItem>\r\n                        <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select> */}\r\n                    <input\r\n  type=\"file\"\r\n  onChange={\r\n    ( e ) => {      \r\n      e.preventDefault();\r\n      const { fields } = this.props;\r\n\r\n      \r\n      console.log(this.props)\r\n      let data = new FormData();\r\n    //   data.append('file', files[0], files[0].name); \r\n    //   const config = {\r\n    //       headers: { 'content-type': 'multipart/form-data' }\r\n    //   }\r\n    //   axios.post(this.uploadurl, data, config).then(resp=>{\r\n    //       formData.src = s3Url + resp.data.data;\r\n    //       // console.log(formData) \r\n    //       // this.setState({src: formData.src }) ;\r\n          \r\n\r\n    //   })  \r\n    //   axios.post(``, reqObj)\r\n    //     .then( (response) => { \r\n    //         console.log('response', response); \r\n    //     })\r\n    //     .catch( (error) => { \r\n    //         console.log('error', error); \r\n    //     })\r\n    //     .then(function () {\r\n    //         console.log('response1212'); \r\n    //     });\r\n    }\r\n  }\r\n/>\r\n                    <div className={classes.textField}>\r\n\r\n                        Admin Permission\r\n                        <Checkbox   \r\n                            id=\"has_admin_permission\"\r\n                            label=\"has_admin_permission\"  \r\n                            checked={this.state.has_admin_permission}\r\n                            onChange={this.handleChange('has_admin_permission')} \r\n\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"outlined\" \r\n                        className={classes.submitButton} onClick={this.submitForm}>\r\n                        Submit\r\n                    </Button>\r\n                </CardContent>             \r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(TextFields);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from './dashboard'; \r\nimport UserListing from './userListing'; \r\nimport CreateUser from './users/create-user'; \r\nimport UpdateUser from './users/update-user'; \r\n\r\nimport CreateCategory from './categories/create-category'; \r\n\r\nexport default [\r\n    <Route exact path=\"/dashboard\" component={Dashboard} />, \r\n    <Route exact path=\"/users\" component={UserListing} />, \r\n    <Route exact path=\"/create-user\" component={CreateUser} />, \r\n    <Route exact path=\"/update-user/:id\" component={UpdateUser} />,\r\n     \r\n    <Route exact path=\"/category/create\" component={CreateCategory} />, \r\n];\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\nimport SimpleTable from './table';\r\nexport default () => (\r\n    <Card>\r\n        {/* <Title title=\"Welcome to the user listing\" /> */}\r\n        <SimpleTable/> \r\n    </Card>\r\n);","\nimport React from 'react';\n\nimport { fetchUtils, Admin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\n\nimport Dashboard from './dashboard';\nimport { PostList } from './posts';\nimport Menu from './menu';\nimport Login from './Login';\nimport Logout from './logout';\nimport authProvider from './authProvider';\nimport axios from './http-interceptor';\n\n\nimport { CategoryList, CategoryEdit, CategoryIcon, CategoriesCreate } from './categories';\n\nimport customRoutes from './customRoute';\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    // add your own headers here\n    // options.headers.set('Access-Control-Expose-Headers', 'Content-Range');\n    // options.headers.set('Content-Range', 'posts 0-24/319');\n    return fetchUtils.fetchJson(url, options);\n}\n// http://52.52.236.205:4000/documentation#/\nconst dataProvider = simpleRestProvider('http://localhost:3333', httpClient);\n \n\n    // logoutButton={Logout}\n\nconst App = () => (\n    <Admin \n    customRoutes={customRoutes}\n    dashboard={Dashboard} \n    menu={Menu}\n    authProvider={authProvider}\n    loginPage={Login} \n    dataProvider={dataProvider}>\n        <Resource name=\"posts\" options={{ label: 'data' }} list={PostList} />\n        <Resource name=\"users\" list={PostList} /> \n        <Resource\n            name=\"categories\"\n            list={CategoryList}\n            edit={CategoryEdit}\n            icon={CategoryIcon}\n            create={CategoriesCreate}\n        />  \n    </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}